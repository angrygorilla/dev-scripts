#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014-2015 by Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variables
#
	LBL=""
	VERBOSE=""
	ARGS=""
	script_version=0.5.4
	hadOpts=false
	while getopts "v36hsio" opts
	do 	case $opts in
		#v)	VERBOSE="-v"	;;
		h)
			echo "ds make ($script_version)
Usage: ds make [options] [LBL]
Where options are:
	-3|6	Force creating 32/64bit - LiveCD only
	-i	Install created package (rpm only)
	-o	Open output directory
	-v	Verbose mode
	
" 
			exit 0
			;;
		*)	ARGS+=" -$opts"
			hadOpts=true	;;
		esac
	done
	$hadOpts && shift $(($OPTIND - 1))
# Do this for every passed label
	for lbl in "${@}"
	do	[ -z "$lbl" ] && LBL="" || LBL="$lbl"
		[ -z "$LBL" ] || str=" ($LBL)"
		TASK_LIST=$(cd /usr/share/dev-scripts/menu/prj;ls -l|grep ^d|awk '{print $9}'|sed s,ks,livecd,g)	#|grep -v git
		LIST=""
	#
	#	Display & Action
	#
		tui-title "Make all project tasks$str ($script_version)"
		if [ -z "$LBL" ]
		then	tui-echo "Please select a project to make:"
			#select LBL in $(cd "$DIR_CFG";ls);do break;done
			LBL=$(tui-select $(cd "$DIR_CFG";ls))
			tui-status $? "Selected: $LBL" || exit $?
		fi
		old="$(pwd)"
		cur="$DIR_CFG/$LBL"
		source "$cur/$LBL.conf"
		
		cd "$cur"
		switchMock=false
		for L in $TASK_LIST;do 
			[ -f "$L.conf" ] && \
				LIST+=" $L" && \
				[ $L = mock ] && \
				switchMock=true
		done
		cd "$old"
#
#	Work through task list of project
#
		for T in $LIST;do
			cmd="$(pwd)/prj"
			add=""
			
			if $switchMock
			then	case $T in
				mock)	T=rpm
					ARGS+=" -s"
					. $cur/rpm.conf
					tui-status 111 "MOCK: Its remote only, overwriting '$opt' with 'bs'"
					;;
				rpm)	T=mock
					;;
				esac
			fi
			
			case $T in
			mock|git|rpm)
				add="/$T/make"		;;
			livecd)	add="/ks/make" 		;;
			*)	tui-status $RET_TODO "TODO: $T"	;;
		#	ks)	tui-echo "TODO: $T"
		#		;;	
			esac
			
			if [ -n "$add" ] 
			then	$cmd$add $VERBOSE $ARGS $LBL
				[ $? -eq 1 ] && exit 1
			fi
		done
	# All passed args have been handled
	done
