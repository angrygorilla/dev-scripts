#!/bin/bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014 by Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	
	source /etc/tui/tui.conf
	source /etc/tui/commands.conf
	source /etc/os-release
	source /etc/tui/apps.conf #|| \
	[[ 0 -ne $UID ]] || \
		source $HOME/.config/tui/apps.conf
		
	script_version=0.7
#
#	Title
#
	title="$OA_TITLE - Mock Handler - Build packages"
	tui-title "$title ($script_version)"
#
#	Variables
#
	case $# in
	5)	shift 3 ;;
	esac
	
	LOG=$LOG_MOCK
	beVerbose=false
	NONVERBOSE="--quiet"
	while getopts "vs" opts
	do 	case $opts in
		v)	beVerbose=true
			NONVERBOSE=""
			;;
		s)	dummy=$opts	;;
		esac
	done
	shift $(($OPTIND - 1))
	
	if [[ -z "$4" ]] # || [[ ! -z "$LBL" ]]
	then	if [[ -d "$DIR_CFG/$1" ]]
		then	LBL="$1"
		else	tui-echo "Please select the label to work with:"
			select LBL in $(cd "$DIR_CFG";ls|$GREP -v \.);do break;done
		fi
	else	LBL="$4"
	fi
	
	source "$CONF_RPM"
	source "$DIR_CFG/$LBL/$LBL.conf"
	if [[ -f "$DIR_CFG/$LBL/rpm.conf" ]]
	then	source "$DIR_CFG/$LBL/rpm.conf"
	else	tui-status 1 "Mock requires a specfile"
		exit 1
	fi
	source "$CONF_MOCK"
	touch "$TUI_TEMP_FILE"
	OPTS="-$opt"
	if [[ -z "$specfile" ]]
	then	specfile="$prj_path/$prj_name.spec"
		[[ -f "$specfile" ]] || specfile=$(tui-read "Please type the full path to the specfile:")
		
		# Save for later use
		if [[ -f "$specfile" ]]
		then	tui-conf-set "$DIR_CFG/$LBL/rpm.conf" specfile "$specfile"
		else	tui-status 1 "Cant work without a specfile!"
			exit $?
		fi
	fi
	VER=$($GREP Version "$specfile"|$AWK '{print $2}')
#
#	hasSudo ?
#
	sudo $GREP -q $USER /etc/sudoers 2>/dev/zero && \
		hasSudo=true || \
		hasSudo=false
	# TODO FIXME temp
	dist=fedora
#
#	Use the correct out path
#
	if $useFAS
	then	source $HOME/.config/fas/fas.conf
		dir_out="$FAS_REVIEW/$prj_name"
		specfile=$dir_out/$prj_name.spec
		tarball=$dir_out/$prj_name-$VER.$TAR_ET
	else	[[ -z "$DIR_OUT" ]] && \
			dir_out="$HOME/data/out/$dist" && \
			tui-conf-set \
				$HOME/.config/dev-scripts/dev-scripts.conf \
				DIR_OUT \
				"$(dirname $dir_out)"  || \
			dir_out="$DIR_OUT/$dist"
	fi
	tui-bol-dir "$dir_out"
#
#	Source RPM
#
	# Was built by 'rpm'
	# now looking for the latest...
	[[ -z $TUI_TEMP_DIR ]] && exit 1
	cd $dir_out && \
		list=$prj_name*$VER*.src.rpm && \
		for l in $list;do s=$l;done && \
		SRC=$dir_out/$s 
#
#	Mock builds all archs
#
	# Prepare tasks
	TASKS=""
	CHECK=0
	touch $LOG_MOCK
	umask 022 $LOG_MOCK
	for dist in $DISTROS;do
		for R in $RELEASES;do
			for A in $ARCHS;do
				T="$dist-$R-$A"
				TASKS+=" $prj_name-$T"
				echo "mock --target=$A -r $T $SRC 1>>$LOG_MOCK 2>>$LOG_MOCK " > "$TUI_TEMP_DIR/$prj_name-$T"
				CHECK=$(($CHECK + 1))
			done
		done
	done
	TASKS=$(echo $TASKS)

	cd "$prj_path"
	if $hasSudo
	then	RET=0
		for T in $TASKS;do
			echo "" >> $LOG_MOCK
			cat "$TUI_TEMP_DIR/$T" >> $LOG_MOCK
			sudo tui-bgjob "$TUI_TEMP_DIR/$T" "Packaging $T" "Packaged $T" && \
				rm "$TUI_TEMP_DIR/$T" #&& RET=$(($RET + 1))
			RET=$?
		done
	else	echo TODO
		cat > $TUI_TEMP_FILE << EOF
for T in $TASKS;do
	cat $TUI_TEMP_DIR/\$T >> $LOG_MOCK
	tui-bgjob "\$TUI_TEMP_DIR/\$T" "Packaging \$T" "Packaged \$T" && rm $TUI_TEMP_DIR/\$T
done
EOF
		tui-echo "Please provide root password:"
		su -c "sh $TUI_TEMP_FILE ; echo \$? > $TUI_TEMP_FILE"
		RET=$(cat $TUI_TEMP_FILE)
	fi
#
#	Check return value
#
	if [[ $RET -ne 0 ]] #tui-status $RET "Made all packages of: $prj_name"
	then	tui-yesno "View logfile?" && tui-edit $LOG_MOCK
		exit 1
	fi
#
#	Moving files
#
	cd /var/lib/mock
	if $hasSudo
	then	list=$(sudo find|grep result|grep -v debug |grep [46]"\.rpm" 2>/dev/zero ) # 2>/dev/zero && \
		sudo chown -R $USER:$USER $list
	else	list=$(find|grep result|grep -v debug |grep [46]"\.rpm" 2>/dev/zero ) 2>/dev/zero
	fi
	for F in $list;do
		tui-printf -rS 2 "Copy to $dir_out:" "$(basename $F)"
		cp -f "$F" "$dir_out"
		tui-status $? "Copied to $dir_out" "$(basename $F)"
	done
	