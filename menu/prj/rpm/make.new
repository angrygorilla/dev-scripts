#!/bin/bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014-2015 by Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	
	source /etc/tui/tui.conf
	source /etc/tui/commands.conf
	source /etc/tui/apps.conf || \
	[[ 0 -eq $UID ]] || \
		source $HOME/.config/tui/apps.conf
		
	script_version=0.8.1
#
#	Title
#
	title="$OA_TITLE - RPM Handler - Build package"
	tui-title "$title ($script_version)"
#
#	Variables
#
	case $# in
	5)	shift 3 ;;
	esac
	
	LOG=$LOG_RPM
	beVerbose=false
	NONVERBOSE="--quiet"
	doSource=false
	while getopts "vs" opts
	do 	case $opts in
		v)	beVerbose=true
			NONVERBOSE=""
			;;
		s)	doSource=true
			;;
		esac
	done
	shift $(($OPTIND - 1))
	
	if [[ -z "$4" ]] # || [[ ! -z "$LBL" ]]
	then	if [[ -d "$DIR_CFG/$1" ]]
		then	LBL="$1"
		else	tui-echo "Please select the label to work with:"
			select LBL in $(cd "$DIR_CFG";ls|grep -v \.);do break;done
		fi
	else	LBL="$4"
	fi
	
	source "$CONF_RPM"
	source "$DIR_CFG/$LBL/$LBL.conf"
	source "$DIR_CFG/$LBL/rpm.conf"
	touch "$TUI_TEMP_FILE"
	$doSource && opt=bs
	OPTS="-$opt"
	if [[ -z "$specfile" ]]
	then	specfile="$prj_path/$prj_name.spec"
		[[ -f "$specfile" ]] || specfile=$(tui-read "Please type the full path to the specfile:")
		
		# Save for later use
		if [[ -f "$specfile" ]]
		then	tui-conf-set "$DIR_CFG/$LBL/rpm.conf" specfile "$specfile"
		else	tui-status 1 "Cant work without a specfile!"
			exit $?
		fi
	fi
	VER=$(grep Version "$specfile"|awk '{print $2}')
	TARBALL="$prj_name-$VER.$TAR_EXT"
	DEST="$rpm_builddir"
	[[ -z "$rpm_cleandir" ]] && rpm_cleandir=true
#
#	Functions
#
	increase_release() { #
	# Automaticly updates the release (build) number
	#
		rel=$(grep -i "release:" "$specfile"|awk '{print $2}')
		num=${rel/\%*/}
		other=${rel/*\%/}
		num=$((num+1))
		$SED s,"$rel","$num%$other",g -i "$specfile"
		
	#	( IFS='%{}';rel=$(echo ${rel}|$AWK '{print $1}' ; export rel num other ))
		return $?
	}
#
#	Display
#
	if $rpm_cleandir
	then	rpmdev-wipetree 2>&1 1>/dev/zero
		tui-status $? "Cleaned $rpm_builddir"
	fi
	[[ -d "$rpm_builddir" ]] || rpmdev-setuptree
	ln -sf "$specfile" "$DEST/SPECS/${specfile##*/}"
	
	# Prepare target directory
	if $remoteOnly
	then	newDest="$prj_path/$prj_name"
	else	newDest="$DEST/SOURCES/"
	fi
	
	# Copy the patch and source files to the sources..
	cd "$prj_path"
	LIST=$(grep -i "patch"[0-9]":" "$specfile"|grep -v ^'#'|grep -i -v ^http|grep -v \{|awk '{print $2}')
	[[ -z "$LIST" ]] || \
		for L in $LIST;do [[ -f "$L" ]] && tui-status -r 2 "Copy $L..." ;cp "$L" "$newDest/";tui-status $? "Copied $L";done
	
	LIST=$(grep -i "source"[0-9]":" "$specfile"|grep -v ^'#'|grep -i -v ^http|grep -v \{|awk '{print $2}')
	[[ ! -z "$LIST" ]] && \
		for L in $LIST;do [[ -f "$L" ]] && tui-status -r 2 "Copy $L..." ;cp "$L" "$newDest/";tui-status $? "Copied $L";done
	
	
	# A little tweaking for the remoteOnly projects
	if $remoteOnly
	then	# Copy the required files also to SOURCES
		newDest="$DEST/SOURCES/"
		
		LIST=$(grep -i "patch"[0-9]":" "$specfile"|grep -v ^'#'|grep -i -v ^http|grep -v \{|awk '{print $2}')
		[[ -z "$LIST" ]] || \
			for L in $LIST;do [[ -f "$L" ]] && tui-status -r 2 "Copy $L..." ;cp "$L" "$newDest/";tui-status $? "Copied $L";done

		LIST=$(grep -i "source"[0-9]":" "$specfile"|grep -v ^'#'|grep -i -v ^http|grep -v \{|awk '{print $2}')
		[[ ! -z "$LIST" ]] && \
			for L in $LIST;do [[ -f "$L" ]] && tui-status -r 2 "Copy $L..." ;cp "$L" "$newDest/";tui-status $? "Copied $L";done
		# We are in $prj_path, and remote only projects are substored in $prj_name
		cd "$prj_name"
	fi
	cd ..
	
	# Make the tarball
	tui-tar "$prj_name"
	mv "$prj_name.$TAR_EXT" "$DEST/SOURCES/$TARBALL"

	# Execute the command
	cd "$prj_path"
	if $beVerbose
	then	rpmbuild $OPTS "$specfile"
		RET=$?
	else	echo "rpmbuild $OPTS $NONVERBOSE \"$specfile\" 1>>$LOG 2>>$LOG" > "$TUI_TEMP_FILE"
		printf "$(grep  rpmbuild $TUI_TEMP_FILE)\n" >> $LOG
		tui-bgjob "$TUI_TEMP_FILE" "Building package: \"$prj_name\"..." "Built package: \"$prj_name\"."
		RET=$?
	fi
	
	# Optional task
	if $useFAS && [[ 0 -eq $RET ]]
	then	source $HOME/.config/fas/fas.conf
		DEST="$FAS_REVIEW/$prj_name"
		TMP="$TUI_TEMP_DIR/$prj_name.info"
		/usr/share/dev-scripts/menu/prj/rpm/list $LBL "$TMP"
		[ -d "$DEST" ] || mkdir -p "$DEST"
		while read line;do
			if [ ! -z "$line" ]
			then	[ -f "$line" ] && cp "$line" "$DEST"/
				tui-status $? "Copied to $DEST:" "$(basename $line)"
			fi
		done<"$TMP"
		cp "$rpm_builddir/SOURCES/$TARBALL" "$DEST"
		tui-status $? "Copied to $DEST:" "$(basename $TARBALL)"
		cp "$specfile" "$DEST"
		tui-status $? "Copied to $DEST:" "$(basename $specfile)"
		rm -fr "$TMP"
	else 	echo "Here would be the default output target" > /dev/zero
	fi
	
	# Increase build number if built was successfull
	if [[ 0 -eq $RET ]]
	then	increase_release
		tui-status $? "Updated $specfile to build:" "Next: $(grep -i "version:" "$specfile"|awk '{print $2}')-${num}"
	elif [[ false = $beVerbose ]]
	then	tui-yesno "Do you want to see the $LOG for details?" && tui-edit "$LOG"
	fi
	
	
	if $rpm_cleandir_after
	then 	rpmdev-wipetree 2>&1 1>/dev/zero
		tui-status $? "Cleaned $rpm_builddir"
	fi
	
	exit $RET